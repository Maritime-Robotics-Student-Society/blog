----------------------------------------

ALRIGHT LISTEN UP HERE

Move this file into your .git/hooks/ directory, then remove this notice, up till and
including the horizontal line just above the shebang. This file even has the right
hook name already aren't I so kind

----------------------------------------
#!/bin/bash

# Pre-commit Git hook. This currently just calls utilities/optimize_thumbnail.py
# which makes a smaller copy of the header image for all articles.
CYAN="\e[36m"
GREEN="\e[92m"
CLEAR="\e[39m"

# Run optimize_thumbnail.py and print out files that need to be thumbnailised to a
# temporary file
# NOTE: This script runs through all articles. So if there are past articles without
# a thumbnail, a thumbnail will be created and the old article will be edited and
# staged too
run_optimise_thumbnail_script() {
    # Get the root of the project
    root="$(git rev-parse --show-toplevel)"

    echo -e "${CYAN}Optimising thumbnails...${CLEAR}"
    python2 "${root}/utilities/optimize_thumbnail.py" $root > temp
    echo -e "${GREEN}Thumbnail creation complete! Staging these new changes...${CLEAR}"
    # Pause for a bit so that you can see what's goin' on
    sleep 2
    # Read each line from the temp file to stage the thumbnailised files to commit
    while IFS='' read -r line || [[ -n "$line" ]]; do
        echo -e "${CYAN}Adding to commit:${CLEAR} $line"
        git add $line
    done < temp
    # Delete the temp file
    rm temp
}

### Script starts here ###
# AWK command to check if:
# 1. A staged file is an article; and
# 2. We aren't removing the file, but adding/modifying it
# Our function parameter will be a line from git diff --cached --name-status
this_is_the_question="$(git diff --cached --name-status \
    | awk '$1 != "D" && "/^_posts/articles/" $2 { print $2 }')"
# If the above test passes, run the function above
if [[ ! -z $this_is_the_question ]]; then
    echo -e "${CYAN}Running thumbnail creation script...${CLEAR}"
    run_optimise_thumbnail_script
fi
exit 1